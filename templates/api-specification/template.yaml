apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: api-specification-template
  title: OpenAPI Specification
  description: Create an OpenAPI specification (v0.6)
spec:
  owner: backstage-admin@redhat.com
  type: api

  parameters:
    - title: API server parameters
      required:
        - api_id
        - owner
        - application
        - description
        - group_id
        - cluster_domain

      properties:
        api_id:
          title: Name
          type: string
          description: Unique name of the API
        description:
          title: Description
          type: string
          description: API description
        owner:
          title: Owner
          type: string
          description: Owner of the API
          ui:field: OwnerPicker
          ui:options:
            allowedKinds: 
              - Group
        application:
          title: System
          type: string
          description: System to which this API belongs
          ui:field: OwnedEntityPicker
          ui:options:
            allowedKinds:
            - System
        mock_provider_url:
          title: Mock Provider URL
          type: string
          description: Microcks Host
          default: https://microcks-microcks.apps.cluster-example.com
        service_registry_provider_url:
          title: Service Registry Provider URL
          type: string
          description: Apicurio Registry Host
          default: https://registry-apicurio-registry.apps.cluster-example.com
        group_id:
          title: Apicurio Registry Group ID
          type: string
          default: com.redhat
        cluster_domain:
          title: Cluster domain
          type: string
          description: Cluster domain (like apps.example.com)
          default: apps.cluster-m22mk.m22mk.sandbox2534.opentlc.com

  steps:
    - id: template
      name: render API specification
      action: fetch:template
      input:
        url: ./skeleton
        copyWithoutRender: []
        values:
          api_id: ${{ parameters.api_id }}
          description: ${{ parameters.description }}
          owner: ${{ parameters.owner }}
          destination: https://github.com/smongiar/${{ parameters.application.split("/")[1] }}-${{ parameters.api_id }}-api
          application: ${{ parameters.application }}
          service_registry_provider_url: https://registry-apicurio-registry.${{ parameters.cluster_domain }}
          mock_provider_url: https://microcks-microcks.${{ parameters.cluster_domain }}
          group_id: ${{ parameters.group_id }}

    - id: publish
      name: publish API specification repository
      action: publish:github
      input:
        allowedHosts: ['github.com']
        description: This is ${{ parameters.api_id }}
        repoUrl: github.com?repo=${{ parameters.application.split("/")[1] }}-${{ parameters.api_id }}-api&owner=smongiar
        repoVisibility: public
        defaultBranch: main
        deleteBranchOnMerge: true
        protectDefaultBranch: false

    - id: webhook
      name: webhook creation source repository
      action: github:webhook
      input: 
        repoUrl: github.com?repo=${{ parameters.application.split("/")[1] }}-${{ parameters.api_id }}-api&owner=smongiar
        webhookUrl: https://webhook-${{ parameters.application.split("/")[1] }}-${{ parameters.api_id }}-api-el-${{ parameters.application.split("/")[1] }}-build.${{ parameters.cluster_domain }}
        webhookSecret: 'mysecret'
        events: ['push']
        active: true
        contentType: 'json'
        insecureSsl: true

    - id: register
      name: Register Component
      action: catalog:register
      input:
        repoContentsUrl: '${{ steps.publish.output.repoContentsUrl }}'
        catalogInfoPath: '/catalog-info.yaml'

    - id: template-system-pull-request
      name: render system pull request
      action: fetch:template
      input:
        url: ./system
        copyWithoutRender: []
        values:
          api_id: ${{ parameters.api_id }}
          application: ${{ parameters.application }}
          service_registry_provider_url: https://registry-apicurio-registry.${{ parameters.cluster_domain }}
          mock_provider_url: https://microcks-microcks.${{ parameters.cluster_domain }}
          group_id: ${{ parameters.group_id }}.${{ parameters.application.split("/")[1] }}
        targetPath: ./system-gitops

    - id: pr
      name: open system pull request
      action: publish:github:pull-request
      input:
        repoUrl: github.com?repo=${{ parameters.application.split("/")[1] }}-system&owner=smongiar
        branchName: ${{ parameters.api_id }}-api
        title: add ${{ parameters.api_id }} API
        description: add ${{ parameters.api_id}} API
        sourcePath: ./system-gitops

  output:
    links:
      - title: Pull Request to System
        url: ${{ steps.pr.output.remoteUrl }}
      - title: Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}